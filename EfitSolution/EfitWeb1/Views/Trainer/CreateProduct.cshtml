@model eUseControl.Domain.Entities.Product.ProductTable

@{
     ViewBag.Title = "Create Product";
}

<h2>Create Product</h2>

@using (Html.BeginForm("CreateProduct", "Trainer", FormMethod.Post, new { @class = "form-horizontal" }))
{
     @Html.AntiForgeryToken()

     <h4>ProductTable</h4>
     <hr />
     @Html.ValidationSummary(true, "", new { @class = "text-danger" })

     <div class="form-group">
          @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
          <div class="col-md-10">
               @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
               @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
          </div>
     </div>

     <div class="form-group">
          @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
          <div class="col-md-10">
               @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
               @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
          </div>
     </div>

     <div class="form-group">
          @Html.LabelFor(model => model.ProductCategory, htmlAttributes: new { @class = "control-label col-md-2" })
          <div class="col-md-10">
               @Html.EditorFor(model => model.ProductCategory, new { htmlAttributes = new { @class = "form-control" } })
               @Html.ValidationMessageFor(model => model.ProductCategory, "", new { @class = "text-danger" })
          </div>
     </div>

     <div class="form-group">
          @Html.LabelFor(model => model.ProductPrice, htmlAttributes: new { @class = "control-label col-md-2" })
          <div class="col-md-10">
               @Html.EditorFor(model => model.ProductPrice, new { htmlAttributes = new { @class = "form-control" } })
               @Html.ValidationMessageFor(model => model.ProductPrice, "", new { @class = "text-danger" })
          </div>
     </div>

     <div class="form-group">
          @Html.LabelFor(model => model.Level, htmlAttributes: new { @class = "control-label col-md-2" })
          <div class="col-md-10">
               @Html.EnumDropDownListFor(model => model.Level, htmlAttributes: new { @class = "form-control" })
               @Html.ValidationMessageFor(model => model.Level, "", new { @class = "text-danger" })
          </div>
     </div>

     <div class="form-group">
          <div class="col-md-offset-2 col-md-10">
               <input type="submit" value="Create" class="btn btn-default" />
          </div>
     </div>
}
